import java.util.*;
import edu.princeton.cs.algs4.*;

public class DepthFirstSearch {

	private boolean marked[];
	private int count;

	public DepthFirstSearch(Graph g, int s) {
		marked = new boolean[g.V()];
		dfs(g, s);
	}

	private void dfs(Graph g, int v) {
		count++;
		marked[v] = true;
		for (int w : g.adj(v)) {
			if (!marked[w]) {
				dfs(g, w);
			}
		}
	}
	
	 public boolean marked(int v) {
	        return marked[v];
	    }

	 public int count() {
	        return count;
	    }

	public static void main(String[] args) {
		
		Graph g = new Graph(9);

		g.addEdge(1, 3);
		g.addEdge(1, 2);
		g.addEdge(2, 3);
		g.addEdge(2, 4);
		g.addEdge(2, 5);
		g.addEdge(4, 5);
		g.addEdge(5, 6);
		g.addEdge(5, 3);
		g.addEdge(3, 8);
		g.addEdge(7, 8);
		g.addEdge(3, 7);
		
		int s = 1;
		
		DepthFirstSearch search = new DepthFirstSearch(g, s);
        for (int v = 0; v < g.V(); v++) {
            if (search.marked(v))
                StdOut.print(v + " ");
        }

	}

}
